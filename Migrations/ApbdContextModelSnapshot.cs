// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApbdContext))]
    partial class ApbdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CountryTrip", b =>
                {
                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdCountry", "IdTrip")
                        .HasName("Country_Trip_pk");

                    b.HasIndex("IdTrip");

                    b.ToTable("Country_Trip", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdClient")
                        .HasName("Client_pk");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.ClientTrip", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime");

                    b.HasKey("IdClient", "IdTrip")
                        .HasName("Client_Trip_pk");

                    b.HasIndex("IdTrip");

                    b.ToTable("Client_Trip", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdCountry")
                        .HasName("Country_pk");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdTrip")
                        .HasName("Trip_pk");

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("CountryTrip", b =>
                {
                    b.HasOne("WebApplication1.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("IdCountry")
                        .IsRequired()
                        .HasConstraintName("Country_Trip_Country");

                    b.HasOne("WebApplication1.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("IdTrip")
                        .IsRequired()
                        .HasConstraintName("Country_Trip_Trip");
                });

            modelBuilder.Entity("WebApplication1.Models.ClientTrip", b =>
                {
                    b.HasOne("WebApplication1.Models.Client", "IdClientNavigation")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("Table_5_Client");

                    b.HasOne("WebApplication1.Models.Trip", "IdTripNavigation")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdTrip")
                        .IsRequired()
                        .HasConstraintName("Table_5_Trip");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdTripNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Client", b =>
                {
                    b.Navigation("ClientTrips");
                });

            modelBuilder.Entity("WebApplication1.Models.Trip", b =>
                {
                    b.Navigation("ClientTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
